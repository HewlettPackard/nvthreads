import os
import sys
sys.path.append('%s/library' % (Dir('#').abspath))
import configuration.mcore

Import('mainEnv')
buildEnv = configuration.mcore.Environment(mainEnv)

buildEnv.Append(CCFLAGS = '-fno-omit-frame-pointer')
buildEnv.Append(CPPPATH = ['#library/mcore/src'])
buildEnv.Append(CCFLAGS = ' -D_GNU_SOURCE ')
buildEnv.Append(LIBS = ['config', 'elf', 'pthread'])
buildEnv.Append(CCFLAGS = ' -m64 ')
buildEnv.Append(LINKFLAGS = ' -T '+ buildEnv['MY_LINKER_DIR'] + '/linker_script_persistent_segment_m64')
buildEnv.Append(CCFLAGS = '-DHAVE_CONFIG_H -Wall -pthread')


if buildEnv['BUILD_DEBUG'] == True:
	buildEnv.Append(CCFLAGS = ' -g -O0 -D_MNEMOSYNE_BUILD_DEBUG')
else:
	buildEnv.Append(CCFLAGS = ' -O2')

if buildEnv['BUILD_STATS'] == True:
	buildEnv.Append(CCFLAGS = ' -D_M_STATS_BUILD')

# For common source files we need to manually specify the object creation rules 
# to avoid getting the following error:
#   scons: warning: Two different environments were specified for target ... 
#   but they appear to have the same actions: ...

COMMON_SRC = [
              ('src/config_generic', '../common/config_generic.c'),
              ('src/debug', '../common/debug.c'), 
             ]

COMMON_OBJS = [buildEnv.SharedObject(src[0], src[1]) for src in COMMON_SRC]
	
C_SRC = Split("""
              src/config.c
              src/module.c
              src/files.c
              src/init.c
              src/reincarnation_callback.c
              src/segment.c
              src/hal/pcm.c
              """)

LOG_C_SRC = Split("""
                  src/log/mgr.c
                  src/log/phlog_base.c
                  src/log/phlog_tornbit.c
                  src/log/logtrunc.c
              """)


SRC = C_SRC + LOG_C_SRC + COMMON_OBJS

if buildEnv['BUILD_LINKAGE'] == 'dynamic':
	mcoreLibrary = buildEnv.SharedLibrary('mcore', SRC)
else:
	mcoreLibrary = buildEnv.StaticLibrary('mcore', SRC)
Return('mcoreLibrary')

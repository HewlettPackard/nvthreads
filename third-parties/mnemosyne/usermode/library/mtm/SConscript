import sys, os
sys.path.append('%s/library' % (Dir('#').abspath))
import configuration.mtm

Import('mainEnv')  # read only -- clone if need to modify

buildEnv = configuration.mtm.Environment(mainEnv, mainEnv['BUILD_CONFIG_NAME'])

# FIXME: Currently we use GCC to build the TM library because we rely on GCC 
# atomic intrinsics such as __sync_add_and_fetch_4, which are not available
# in the version of ICC we use. We would like to fix this issue.

buildEnv['CC'] = 'gcc'
buildEnv['CXX'] = 'g++'

buildEnv.Append(CCFLAGS = '-fno-omit-frame-pointer')
buildEnv.Append(CPPPATH = ['#library/mcore/include'])
buildEnv.Append(CPPPATH = ['#library/atomic_ops'])
buildEnv.Append(CPPPATH = 'src/sysdeps/linux')
buildEnv.Append(CPPPATH = 'src/sysdeps/x86')
buildEnv.Append(CPPPATH = 'src')
buildEnv.Append(CPPPATH = 'src/common')
buildEnv.Append(LINKFLAGS = '-fpic')  # not sure why but -fPIC causes problems
buildEnv.Append(CCFLAGS = ' -m64 ')
buildEnv.Append(ASFLAGS = '-DHAVE_CONFIG_H -Wall -g -O2 -fpic')

if buildEnv['BUILD_DEBUG'] == True:
	buildEnv.Append(CCFLAGS = ' -g -D_MTM_BUILD_DEBUG')
else:
	buildEnv.Append(CCFLAGS = ' -O1 -g')

if buildEnv['BUILD_STATS'] == True:
	buildEnv.Append(CCFLAGS = ' -D_M_STATS_BUILD')



# For common source files we need to manually specify the object creation rules 
# to avoid getting the following error:
#   scons: warning: Two different environments were specified for target ... 
#   but they appear to have the same actions: ...

COMMON_SRC = [
              ('src/config_generic', '../common/config_generic.c'), 
              ('src/chhash', '../common/chhash.c'),
              ('src/debug', '../common/debug.c'), 
             ]

COMMON_OBJS = [buildEnv.SharedObject(src[0], src[1]) for src in COMMON_SRC]

CC_SRC = Split("""
               src/config.c
               src/gc.c
               src/init.c
               src/intelabi.c
               src/local.c
               src/mode/mode.c
               src/mode/common/common.c
               src/mode/pwb-common/pwb.c
               src/mode/pwbetl/beginend.c
               src/mode/pwbetl/memcpy.c
               src/mode/pwbetl/memset.c
               src/mode/pwbetl/pwbetl.c
               src/mode/pwbetl/barrier.c
               src/mode/pwbnl/beginend.c
               src/mode/pwbnl/memcpy.c
               src/mode/pwbnl/memset.c
               src/mode/pwbnl/pwbnl.c
               src/mode/pwbnl/barrier.c
	       src/mode/pwb-common/tmlog_base.c
	       src/mode/pwb-common/tmlog_tornbit.c
               src/mtm.c
               src/stats.c
               src/txlock.c
               src/useraction.c
               """)

CC_LINUX_SRC = Split("""
                     src/sysdeps/linux/rwlock.c
                     """)

S_SRC = Split("""src/sysdeps/x86/sjlj.S""")

SRC = CC_SRC + S_SRC + CC_LINUX_SRC + COMMON_OBJS

if buildEnv['BUILD_LINKAGE'] == 'dynamic':
	mtmLibrary = buildEnv.SharedLibrary('mtm', SRC)
else:
	mtmLibrary = buildEnv.StaticLibrary('mtm', SRC)

Return('mtmLibrary')
